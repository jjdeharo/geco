name: Build Installers

on:
  release:
    types: [published]

permissions:
  contents: write

jobs:
  build:
    name: Build ${{ matrix.display }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: ubuntu-latest
            display: Linux
            upload_patterns: "*.AppImage *.deb *.tar.gz"
          - os: windows-latest
            display: Windows
            upload_patterns: "*.exe *.zip"
          - os: macos-latest
            display: macOS
            upload_patterns: "*.dmg *.zip"
    env:
      GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      CSC_IDENTITY_AUTO_DISCOVERY: false
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm

      - name: Install Linux packaging dependencies
        if: matrix.os == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install --no-install-recommends -y rpm xz-utils libarchive-tools

      - name: Install dependencies
        run: npm ci

      - name: Build distributables
        run: npm run dist -- --publish never

      - name: Upload packaged artifacts
        uses: actions/upload-artifact@v4
        with:
          name: geco-${{ matrix.display }}
          path: dist/
          if-no-files-found: warn

      - name: Attach installers to GitHub release
        shell: bash
        env:
          TAG_NAME: ${{ github.event.release.tag_name }}
          UPLOAD_PATTERNS: ${{ matrix.upload_patterns }}
        run: |
          shopt -s nullglob
          files=()
          for pattern in $UPLOAD_PATTERNS; do
            for file in dist/$pattern; do
              if [ -f "$file" ]; then
                files+=("$file")
              fi
            done
          done

          if [ ${#files[@]} -eq 0 ]; then
            echo "No installers found for patterns: $UPLOAD_PATTERNS"
            exit 1
          fi

          echo "Uploading files: ${files[*]}"
          gh release upload "$TAG_NAME" "${files[@]}" --clobber
